<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="/javascripts/socketio.js"></script>
</head>

<body>
    <h1>聊天室</h1>
    <h2>当前用户：
        <b id="user"></b>
    </h2>
    <input type="text" id="text"><button id="send">send</button>

    <select name="" id="select">

    </select>
    <!-- 建立scoket连接，带着token，后端验证 -->
    <script>
        //客户端
        var select = document.querySelector("#select")
        var send = document.querySelector("#send")
        var text = document.querySelector("#text")
        var user = document.querySelector("#user")
        user.innerHTML = localStorage.getItem("username")
        //标示type对象
        const WebSocketType = {
            Error: 0,//错误
            GroupList: 1,//获取群组列表
            GroupChat: 2,//群聊
            SingleChat: 3//私聊
        }

        //引入socker io的js端代码socketio.js 客户端
        const socket = io(`ws://localhost:3000?token=${localStorage.getItem("token")}`);//传空的默认连接localhost：3000，因为要token授权所以传完整地址
        // socket.on("aaa", (msg) => {
        //     console.log(msg)
        // })
        socket.on(WebSocketType.GroupChat, (msg) => {
            console.log(msg)
            var title = msg.user ? msg.user.username : "广播"
            console.log(title + ":" + msg.data)
        })

        socket.on(WebSocketType.SingleChat, (msg) => {
            console.log(msg)
            var title = msg.user ? msg.user.username : "广播"
            console.log(title + ":" + msg.data)
        })

        socket.on(WebSocketType.Error, (msg) => {
            localStorage.removeItem("token")
            location.href = "/login"
        })

        socket.on(WebSocketType.GroupList, (msgObj) => {
            console.log(msgObj.data)
            const onlineList = msgObj.data//不用json.parse了，返回的就是数组了
            select.innerHTML = ""
            select.innerHTML = `<option value="all">all</option>` + onlineList.map(item => `
                        <option value="${item.username}">${item.username}</option>
                    `).join("")

        })


        send.onclick = () => {
            if (select.value === "all") {
                // console.log("群聊")
                socket.emit(WebSocketType.GroupChat, createMessage(text.value))

            } else {
                // console.log("私聊")
                socket.emit(WebSocketType.SingleChat, createMessage(text.value, select.value))
            }
        }

        function createMessage(data, to) {
            return {
                data,
                to
            }
        }
    </script>
</body>

</html>